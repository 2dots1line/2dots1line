# .env
# Root environment configuration for 2dots1line V7 local development

# === APPLICATION PORTS ===
# Port for the Web App (client-facing UI)
WEB_APP_HOST_PORT=3000
# Port for the API Gateway (client-facing, exposed FROM host machine TO container)
API_GATEWAY_HOST_PORT=3001
# Internal port the API Gateway container application itself listens on
API_GATEWAY_CONTAINER_PORT=3001

# NEW: Ports for internal backend services
DIALOGUE_SERVICE_HOST_PORT=3002
USER_SERVICE_HOST_PORT=3003
CARD_SERVICE_HOST_PORT=3004
DIMENSION_REDUCER_HOST_PORT=5001 # Python Service


# === SECURITY ===
JWT_SECRET=z6K8xt9P3q7R2vYV1wL5mN4sA0bC8dE2fG4hJ6kL8mN0pQ2rS4tU6vW8xY0zZ1
JWT_EXPIRES_IN=1d

# --- REGION-BASED MODEL SELECTION ---
# Set to 'global' for Google Gemini, 'china' for DeepSeek/Qwen, etc.
MODEL_REGION=global
# === AI PROVIDER KEYS ===
# For US Region (or default) - Ensure this is your actual Gemini API Key
 LLM_PROVIDER=gemini
 LLM_CHAT_MODEL=gemini-2.5-flash
 LLM_VISION_MODEL=gemini-2.5-flash
 LLM_EMBEDDING_MODEL=text-embedding-004
 LLM_FALLBACK_MODEL=gemini-2.0-flash-exp
 GOOGLE_API_KEY=AIzaSyDagwcNy45aBD9JSHhD8Uu9ozysugDzQfQ 

# For China Region (if testing locally with DeepSeek) deepseek-ai/DeepSeek-R1-0528-Qwen3-8B ; https://docs.siliconflow.cn/cn/api-reference/chat-completions/chat-completions
# SILLICONFLOW
# LLM_PROVIDER=openai
# OPENAI_API_KEY=sk-sknohftxejzfzdmsrjdzdcmkttuztngwfroskkhsucbezlqf
# OPENAI_BASE_URL=https://api.siliconflow.cn/v1
# LLM_CHAT_MODEL=deepseek-ai/DeepSeek-R1
# LLM_EMBEDDING_MODEL=netease-youdao/bce-embedding-base_v1

# Tencent HUNYUAN:
# OPENAI_API_KEY=sk-8YXVphqMTLbknAhHO9KXoiZmElvrf0JlrHWGVfsIq2kDsu1t
# OPENAI_BASE_URL=https://api.hunyuan.cloud.tencent.com/v1
# LLM_CHAT_MODEL=hunyuan-t1-20250822
# LLM_EMBEDDING_MODEL=hunyuan-embedding
# === DATABASE CONFIGURATIONS ===

# --- PostgreSQL ---
# Credentials and DB name (used by Docker Compose to initialize PG and by local tools)
POSTGRES_USER=danniwang
POSTGRES_PASSWORD=MaxJax2023@
POSTGRES_DB_NAME=twodots1line

# Port on your Mac that maps to the PostgreSQL container's port 5432
POSTGRES_HOST_PORT=5433

# Connection URL for Prisma CLI (and other tools running on your Mac, outside Docker)
DATABASE_URL="postgresql://danniwang:MaxJax2023@@localhost:5433/twodots1line"
# DATABASE_URL="postgresql://danniwang:MaxJax2023@@localhost:5433/twodots1line"
# --- Neo4j ---
# Credentials (used by Docker Compose to initialize Neo4j)
NEO4J_USER=neo4j
NEO4J_PASSWORD=password123

# Port on your Mac for Neo4j Browser (HTTP)
NEO4J_HTTP_HOST_PORT=7475
# Port on your Mac for Neo4j Bolt protocol (application connections)
NEO4J_BOLT_HOST_PORT=7688

# Connection URI for applications/tools running *on your host machine* (e.g., cypher-shell)
NEO4J_URI_HOST="neo4j://localhost:${NEO4J_BOLT_HOST_PORT}"

# --- Weaviate ---
WEAVIATE_SCHEME=http # Scheme for Weaviate (http or https) - Used by both host and container connections

# Port on your Mac for Weaviate API
WEAVIATE_HOST_PORT=8080

# Connection host & port for applications/tools running *on your host machine*
WEAVIATE_HOST_LOCAL=localhost:${WEAVIATE_HOST_PORT}

# --- Redis ---
# Port on your Mac for Redis
REDIS_HOST_PORT=6379
# REDIS_PASSWORD= # Uncomment and set if your Redis requires a password
REDIS_URL=redis://localhost:6379
# === GENERAL ===
NODE_ENV=development

# === INTERNAL DOCKER NETWORK CONFIG (Used by docker-compose.yml for inter-container communication) ===
# These define how services *inside Docker* find each other. The hostnames are the service names from docker-compose.yml.

# NEW: URLs for API Gateway to find other services inside Docker
DIALOGUE_SERVICE_URL_DOCKER=http://dialogue-service:3002
USER_SERVICE_URL_DOCKER=http://user-service:3003
CARD_SERVICE_URL_DOCKER=http://card-service:3004
DIMENSION_REDUCER_URL_DOCKER=http://dimension-reducer:5001

# PostgreSQL connection details for apps inside Docker
POSTGRES_HOST_FOR_APP_IN_DOCKER=postgres
POSTGRES_PORT_FOR_APP_IN_DOCKER=5432 # Standard internal Postgres port

# Neo4j connection details for apps inside Docker
NEO4J_URI_DOCKER=neo4j://neo4j:7687 # 'neo4j' is service name, 7687 is internal Bolt port

# Weaviate connection details for apps inside Docker
WEAVIATE_SCHEME_DOCKER=http # Scheme is often the same
WEAVIATE_HOST_DOCKER=weaviate:8080 # 'weaviate' is service name, 8080 is internal port

# Redis connection details for apps inside Docker
REDIS_HOST_DOCKER=redis # 'redis' is service name
REDIS_PORT_FOR_APP_IN_DOCKER=6379 # Standard internal Redis port

# Ensure this .env file is in your .gitignore
# PostgreSQL compatibility fix
POSTGRES_DB=${POSTGRES_DB_NAME}


# === Missing Neo4j variables for PM2 workers ===
NEO4J_URI=neo4j://localhost:7688
NEO4J_USERNAME=neo4j
WEAVIATE_URL=http://localhost:8080
FORCE_GEMINI_MODEL=gemini-2.5-flash


# === Pexel image videos API ===
PEXELS_API_KEY=sWXSWt0wNf3B2WdMrUPJdi3sbgmT3eCD9EbnObPafnKLceErnXpMcROs
# === MAINTENANCE WORKER CONFIGURATION ===
# Task Enablement
ENABLE_REDIS_CLEANUP_TASK=true
ENABLE_INTEGRITY_CHECK_TASK=true
ENABLE_DB_OPTIMIZATION_TASK=true
ENABLE_ARCHIVING_TASK=false

# Cron Schedules
CLEANUP_REDIS_CRON="0 * * * *"
INTEGRITY_CHECK_CRON="0 2 * * *"
DB_OPTIMIZATION_CRON="0 3 * * 1"
ARCHIVING_CRON="0 4 1 * *"

# Task-Specific Configs
STALE_REDIS_KEY_THRESHOLD_HOURS=24
ARCHIVE_CONVERSATIONS_AFTER_DAYS=730
INTEGRITY_CHECK_BATCH_SIZE=1000
DIMENSION_REDUCER_URL=http://localhost:5001
UMAP_INTERVAL=2
MIN_NODES_FOR_UMAP=2
MAX_NODES_FOR_UMAP=1000
